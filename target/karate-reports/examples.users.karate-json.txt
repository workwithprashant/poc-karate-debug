{"failedCount":0,"prefixedPath":"classpath:examples\/users.feature","packageQualifiedName":"examples.users","loopIndex":-1,"relativePath":"examples\/users.feature","scenarioResults":[{"sectionIndex":0,"stepResults":[{"result":{"nanos":1091400,"millis":1.0914,"status":"passed"},"step":{"background":true,"line":5,"prefix":"*","index":0,"text":"def randomNumber = random_number(2)"},"stepLog":"11:29:39.865 << lock released, cached callSingle: classpath:examples\/generic_functions.feature\n","callResults":[{"failedCount":0,"prefixedPath":"classpath:examples\/generic_functions.feature","packageQualifiedName":"examples.generic_functions","loopIndex":-1,"relativePath":"examples\/generic_functions.feature","scenarioResults":[{"sectionIndex":0,"stepResults":[{"result":{"nanos":28852801,"millis":28.852801,"status":"passed"},"step":{"endLine":19,"comments":["# function for creating a random numeric value of length x","# Input: length of value","# output: random number of length x (input)"],"background":true,"line":8,"prefix":"*","docString":"function(x) {\nrand_str = '';\nchar_list = '123456789';\nchar_length = char_list.length;\nfor ( var i = 0; i < x; i++) {\n\trand_str += char_list.charAt(Math.floor(Math.random() * char_length));\n}\nreturn rand_str;\n}","index":0,"text":"def random_number ="},"stepLog":"11:29:39.698 >> lock acquired, begin callSingle: classpath:examples\/generic_functions.feature\n"},{"result":{"nanos":14481600,"millis":14.4816,"status":"passed"},"step":{"background":true,"line":20,"prefix":"*","index":1,"text":"def uuid = random_number(10)"}},{"result":{"nanos":47978699,"millis":47.978699,"status":"passed"},"step":{"endLine":31,"comments":["# function to generate random run number, takes scenarioName and length of random number required as input","# Extracts jira number from scenarioName and appends to random number e.g for JIRA\": \"JIRA-722\", this will return","# 722-2001521009 (10 is length)"],"background":true,"line":25,"prefix":"*","docString":"function(scenarioName, length) {\n var thenum = scenarioName.replace( \/\\D\/g, '');\n return ''+ thenum +'-'+random_number(length);\n}","index":2,"text":"def random_run_num ="}},{"result":{"nanos":1197100,"millis":1.1971,"status":"passed"},"step":{"endLine":47,"comments":["# function for creating a random alpha-only value of length x","# Input: length of value","# output: random string of length x (input)"],"background":true,"line":36,"prefix":"*","docString":"function(x) {\nrand_str = '';\nchar_list = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz';\nchar_length = char_list.length;\nfor ( var i = 0; i < x; i++) {\n\trand_str += char_list.charAt(Math.floor(Math.random() * char_length));\n}\nreturn rand_str;\n}","index":3,"text":"def random_string ="}},{"result":{"nanos":1325200,"millis":1.3252,"status":"passed"},"step":{"endLine":63,"comments":["# function for creating a random alphanumberic value of length x","# Input: length of value","# output: random string of length x (input)"],"background":true,"line":52,"prefix":"*","docString":"function(x) {\nrand_str = '';\nchar_list = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\nchar_length = char_list.length;\nfor ( var i = 0; i < x; i++) {\n\trand_str += char_list.charAt(Math.floor(Math.random() * char_length));\n}\nreturn rand_str;\n}","index":4,"text":"def random_numStr ="}},{"result":{"nanos":12675601,"millis":12.675601,"status":"passed"},"step":{"endLine":83,"comments":["# function to generate random run string based on a Jira number.","# takes scenarioName and length of random number required as input","# Extracts jira number from scenarioName, converts it to excel column letter and appends to random number","# e.g for JIRA: \"JIRA-496\", this will return","# SB-UOSS (4 is length)"],"background":true,"line":71,"prefix":"*","docString":"function(scenarioName, length) {\n\tvar s = '',t;\n \tvar num = scenarioName.replace( \/\\D\/g, '');\n\twhile (num > 0) {\n\t\tt = (num - 1) % 26;\n\t\ts = String.fromCharCode(65 + t) + s;\n\t\tnum = (num - t)\/26 | 0;\n\t}\n \treturn s +'-'+random_string(length);\n}","index":5,"text":"def random_run_str ="}},{"result":{"nanos":2187900,"millis":2.1879,"status":"passed"},"step":{"endLine":99,"comments":["# function for creating a random alphanumberic with special chars value of length x","# Input: length of value","# output: random string of length x (input)"],"background":true,"line":88,"prefix":"*","docString":"function(x) {\nrand_str = '';\nchar_list = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789~!@#$%^&*_+-=:;<>?,.|';\nchar_length = char_list.length;\nfor ( var i = 0; i < x; i++) {\n\trand_str += char_list.charAt(Math.floor(Math.random() * char_length));\n}\nreturn rand_str;\n}","index":6,"text":"def random_all ="}},{"result":{"nanos":2166800,"millis":2.1668,"status":"passed"},"step":{"endLine":115,"comments":["# function for creating a random value containging special chars value of length x","# Input: length of value","# output: random string of length x (input)"],"background":true,"line":104,"prefix":"*","docString":"function(x) {\nrand_str = '';\nchar_list = '~!@#$%^&*_+-=:;<>?,.|';\nchar_length = char_list.length;\nfor ( var i = 0; i < x; i++) {\n\trand_str += char_list.charAt(Math.floor(Math.random() * char_length));\n}\nreturn rand_str;\n}","index":7,"text":"def random_spchars ="}},{"result":{"nanos":11092901,"millis":11.092901,"status":"passed"},"step":{"endLine":129,"comments":["# function for creating a random valid format GUID","# found on stack overflow here - https:\/\/stackoverflow.com\/questions\/105034\/create-guid-uuid-in-javascript","# Input: none","# Output: random GUID"],"background":true,"line":121,"prefix":"*","docString":"function() {\n\treturn 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(\/[xy]\/g, function(c) {\n\t  var r = Math.random() * 16 | 0, v = c == 'x' ? r : (r & 0x3 | 0x8);\n\t  return v.toString(16);\n\t});\n}","index":8,"text":"def random_uuid ="}},{"result":{"nanos":6667800,"millis":6.6678,"status":"passed"},"step":{"endLine":144,"background":true,"line":131,"prefix":"*","docString":"function fn(s) {\n\tvar SimpleDateFormat = Java.type(\"java.text.SimpleDateFormat\");\n\tvar sdf = new SimpleDateFormat(\"yyyy-MM-dd'T'HH:mm:ss.SSSSSSS'Z'\");\n\ttry {\n\t\tsdf.parse(s).time;\n\t\treturn true;\n\t} catch(e) {\n\t\tkarate.log('*** invalid date string:', s);\n\t\treturn false;\n\t}\n}","index":9,"text":"def isValidTime ="}},{"result":{"nanos":890101,"millis":0.890101,"status":"passed"},"step":{"endLine":155,"comments":["# function for getting the current date","# Input: none","# Output: current date in seconds"],"background":true,"line":149,"prefix":"*","docString":"function() {\nvar d = new Date();\nreturn d.getTime() \/ 1000;\n}","index":10,"text":"def getCurrentDate ="}},{"result":{"nanos":732800,"millis":0.7328,"status":"passed"},"step":{"endLine":166,"comments":["# function for creating a random service tag of 7 char length in format 'AAAAXXX'","# Input: length of value","# output: random string of length x (input)"],"background":true,"line":160,"prefix":"*","docString":"function() {\n    var serverTag = random_string(4) + random_number(3);\n       return serverTag.toUpperCase();\n}","index":11,"text":"def random_tag ="}}],"line":168,"description":"","durationMillis":130.249303,"failed":false,"tags":["ignore"],"executorName":"main","name":"Generic Functions","startTime":1646760579706,"refId":"[1:168]","endTime":1646760579850,"exampleIndex":-1}],"callDepth":1,"name":"","description":"","resultDate":"2022-03-08 11:30:51 AM","durationMillis":130.249303,"passedCount":1}]},{"result":{"nanos":4424901,"millis":4.424901,"status":"passed"},"step":{"endLine":15,"background":true,"line":6,"prefix":"*","docString":"function(seconds){\n  for(i = 0; i <= seconds; i++)\n  {\n    java.lang.Thread.sleep(1*1000);\n    karate.log(i);\n  }\n}","index":1,"text":"def sleep ="}},{"result":{"nanos":3818501,"millis":3.818501,"status":"passed"},"step":{"line":18,"prefix":"*","index":0,"text":"karate.log('Iteration = ', 1)"},"stepLog":"11:29:39.880 Iteration =  1 \n"},{"result":{"nanos":1212700,"millis":1.2127,"status":"passed"},"step":{"line":19,"prefix":"*","index":1,"text":"karate.log('randomNumber = ', randomNumber)"},"stepLog":"11:29:39.883 randomNumber =  59 \n"},{"result":{"nanos":71966365400,"millis":71966.3654,"status":"passed"},"step":{"line":20,"prefix":"*","index":2,"text":"sleep(70)"},"stepLog":"11:29:40.897 0 \n11:29:41.905 1 \n11:29:42.908 2 \n11:29:43.925 3 \n11:29:44.929 4 \n11:29:45.943 5 \n11:29:46.945 6 \n11:29:47.949 7 \n11:29:48.960 8 \n11:29:49.976 9 \n11:29:50.980 10 \n11:29:51.995 11 \n11:29:53.011 12 \n11:29:54.017 13 \n11:29:55.022 14 \n11:29:56.025 15 \n11:29:57.037 16 \n11:29:58.048 17 \n11:29:59.062 18 \n11:30:00.073 19 \n11:30:01.087 20 \n11:30:02.101 21 \n11:30:03.117 22 \n11:30:04.330 23 \n11:30:05.346 24 \n11:30:06.352 25 \n11:30:07.358 26 \n11:30:08.361 27 \n11:30:09.378 28 \n11:30:10.392 29 \n11:30:11.407 30 \n11:30:12.424 31 \n11:30:13.439 32 \n11:30:14.440 33 \n11:30:15.457 34 \n11:30:16.459 35 \n11:30:17.475 36 \n11:30:18.490 37 \n11:30:19.497 38 \n11:30:20.514 39 \n11:30:21.518 40 \n11:30:22.533 41 \n11:30:23.537 42 \n11:30:24.541 43 \n11:30:25.554 44 \n11:30:26.568 45 \n11:30:27.584 46 \n11:30:28.600 47 \n11:30:29.611 48 \n11:30:30.616 49 \n11:30:31.629 50 \n11:30:32.643 51 \n11:30:33.655 52 \n11:30:34.658 53 \n11:30:35.667 54 \n11:30:36.682 55 \n11:30:37.695 56 \n11:30:38.711 57 \n11:30:39.727 58 \n11:30:40.736 59 \n11:30:41.753 60 \n11:30:42.768 61 \n11:30:43.773 62 \n11:30:44.787 63 \n11:30:45.800 64 \n11:30:46.808 65 \n11:30:47.821 66 \n11:30:48.822 67 \n11:30:49.835 68 \n11:30:50.842 69 \n11:30:51.847 70 \n"},{"result":{"nanos":946100,"millis":0.9461,"status":"passed"},"step":{"line":21,"prefix":"*","index":3,"text":"def var = 'foo'"}},{"result":{"nanos":1230501,"millis":1.230501,"status":"passed"},"step":{"line":22,"prefix":"*","index":4,"text":"karate.log('Unique UUID = ', uuid)"},"stepLog":"11:30:51.852 Unique UUID =  8918427262 \n"}],"line":25,"description":"","durationMillis":71979.089503,"failed":false,"tags":["demo"],"executorName":"main","name":"create a user and then get it by id","startTime":1646760579680,"refId":"[1.1:25]","endTime":1646760651852,"exampleData":{"iteration":"1"},"exampleIndex":0}],"callDepth":0,"name":"sample karate test script","description":"","resultDate":"2022-03-08 11:30:51 AM","durationMillis":71979.089503,"passedCount":1}